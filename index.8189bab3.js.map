{"mappings":"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","sources":["src/js/app.js"],"sourcesContent":["\n\n// burger\nconst burger = document.querySelector('.burger')\nconst menu = document.querySelector('.nav')\nconst barBurger = document.querySelectorAll('.bar')\nconst body = document.body\n\nburger.addEventListener('click', () => {\n    burger.classList.toggle('active')\n    menu.classList.toggle('active')\n    body.classList.toggle('stopscroll')\n})\ndocument.querySelectorAll('.nav__menu').forEach(n => n.addEventListener('click', () => {\n    burger.classList.remove('active')\n    menu.classList.remove('active')\n    body.classList.remove('stopscroll')\n}))\n\n\n// open cart \nconst openCartBtn = document.querySelector('#open-cart')\nconst shoppingCart = document.querySelector('.shoping-cart')\nconst closeBtnCart = document.querySelector('.btn-close')\nconst fadeBlock = document.querySelector('#modal')\nconst fade = document.querySelector('.fade-block')\n\nopenCartBtn.addEventListener('click', () => {\n    fadeBlock.classList.remove('hidden')\n    body.classList.toggle('stopscroll')\n    fade.addEventListener('click', function() {\n        fade.classList.add('hidden')\n        body.classList.remove('stopscroll')\n    })\n})\ncloseBtnCart.addEventListener('click', () => {\n    fadeBlock.classList.add('hidden')\n    body.classList.remove('stopscroll')\n})\n\nshoppingCart.addEventListener('click', (event) =>  event.stopPropagation())\n\n\n// counters\n// window.addEventListener('click', function(e) {\n//     let counter \n//     if (e.target.dataset.action === 'plus' || e.target.dataset.action === 'minus') {\n//         const counterWrapper = e.target.closest('.product__desc-amount');\n//         counter = counterWrapper.querySelector(\"[data-counter]\");\n//     }\n\n//     if (e.target.dataset.action === 'plus') {\n//         counter.innerText = ++counter.innerText;\n//       }\n//       if (e.target.dataset.action === 'minus') {\n//         if (parseInt(counter.innerText) > 1) {\n//           counter.innerText = --counter.innerText;\n//         }\n//       }\n// })\n\nwindow.addEventListener('click', setCounters)\nshoppingCart.addEventListener('click', setCounters)\nfunction setCounters(e) {\n    let counter \n    if (e.target.dataset.action === 'plus' || e.target.dataset.action === 'minus') {\n        const counterWrapper = e.target.closest('.product__desc-amount');\n        counter = counterWrapper.querySelector(\"[data-counter]\");\n    }\n\n    if (e.target.dataset.action === 'plus') {\n        counter.innerText = ++counter.innerText;\n      }\n      if (e.target.dataset.action === 'minus') {\n        if (parseInt(counter.innerText) > 1) {\n          counter.innerText = --counter.innerText;\n        }\n      }\n}\n\n\nconst cartData = []\n\nconst cartCount = document.querySelector('.btn-cart span')\ncartCount.textContent = `${cartData.length}`\n\n// add products to shopping cart\nconst cartWrapper = document.querySelector('.shopping-cart__container');\ncheckEmptyCart()\nfunction addProducts(e) {\n    if (e.target.hasAttribute('data-cart')) {\n        const card = e.target.closest('.products__cards-item');\n        const productInfo = {\n            id: card.dataset.id,\n            img: card.querySelector('.products__photo img').getAttribute('src'),\n            name: card.querySelector('.product__name').innerText,\n            price: card.querySelector('.product__price').innerText,\n            // counter: card.querySelector(\"[data-counter]\").innerText,\n        }\n\n        const itemInCart = cartWrapper.querySelector(\n            `[data-id=\"${productInfo.id}\"]`\n          );\n\n        if (itemInCart) {\n            const counterElement = itemInCart.querySelector(\"[data-counter]\");\n            //counterElement.innerText = //parseInt(counterElement.innerText) + parseInt(productInfo.counter);\n          } else {\n            const cartItemHTML = `\n            <div class=\"cart-item\" data-id=\"${productInfo.id}\">\n                 <div class=\"cart-item__info\">\n                     <img src=\"${productInfo.img}\" alt=\"${productInfo.name}\">\n                     <h3 class=\"cart-item__title\">${productInfo.name}</h3>\n                     <p class=\"cart-item__price\">${productInfo.price}</p>\n                     \n                     <div class=\"product__desc-amount\">\n                           <div class=\"items__contror\" data-action=\"minus\">-</div>\n                           <div class=\"items__counter\" data-counter>1</div>\n                           <div class=\"items__contror\" data-action=\"plus\">+</div>\n                     </div>\n                 </div>\n                 <button data-action=\"remove\" class=\"btn-remove\">X</button>\n             </div>\n            `\n            cartWrapper.insertAdjacentHTML('beforeend', cartItemHTML)\n            cartData.push(productInfo)\n            cartCount.textContent = `${cartData.length}`\n            checkEmptyCart()\n          }\n\n\n       // card.querySelector('[data-counter]').innerText = '1'\n    }\n}\nwindow.addEventListener('click', addProducts)\n\n\nshoppingCart.addEventListener('click', (e) => {\n    if (e.target.dataset.action === 'remove') {\n        const parent = e.target.closest('.cart-item')\n        const id = parent.dataset.id\n        const index = cartData.indexOf(prodict => prodict.id === id)\n        cartData.splice(index, 1)\n        parent.remove()\n        checkEmptyCart()\n        cartCount.textContent = `${cartData.length}`\n    }\n})\n\nfunction checkEmptyCart() {\n    if (cartData.length === 0) {\n        const emptyCartHTML = `\n        <h3 id=\"empty\">Your shopping cart is empty</h3>\n        `\n        cartWrapper.insertAdjacentHTML('afterbegin', emptyCartHTML)\n    }\n    if (cartData.length > 0) {\n        const emptyListEl = document.querySelector('#empty')\n        emptyListEl ? emptyListEl.remove() : null\n    }\n}\n\n\n\n// scroll\nconst sections = document.querySelectorAll('.section')\nconst links = document.querySelectorAll('.nav__link')\nconst menuList = document.querySelector('.nav__menu')\n\nconst observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n            links.forEach((link) => {\n                if (link.getAttribute('href').replace('#', '') === entry.target.id) {\n                    link.classList.add('active')\n                } else {\n                    link.classList.remove('active')\n                }\n               \n            })\n        }\n    })\n}, {\n    threshold: 0.3,\n})\nsections.forEach((section) => observer.observe(section))\n\nmenuList.addEventListener('click', (e) => {\n    if (e.target.classList.contains('nav__link')) {\n        e.preventDefault()\n        const id = e.target.getAttribute('href').replace('#', '')\n        window.scrollTo({\n            top: document.getElementById(id).offsetTop,\n            behavior: \"smooth\",\n        })\n    }\n})\n\n"],"names":["burger","document","querySelector","menu","barBurger","querySelectorAll","body","addEventListener","classList","toggle","forEach","n","remove","openCartBtn","shoppingCart","closeBtnCart","fadeBlock","fade","setCounters","e","counter","target","dataset","action","closest","innerText","parseInt","add","event","stopPropagation","window","cartData","cartCount","textContent","length","cartWrapper","addProducts","hasAttribute","card","productInfo","id","img","getAttribute","name","price","itemInCart","cartItemHTML","insertAdjacentHTML","push","checkEmptyCart","emptyCartHTML","emptyListEl","parent","index","indexOf","prodict","splice","sections","links","menuList","observer","IntersectionObserver","entries","entry","isIntersecting","link","replace","threshold","section","observe","contains","preventDefault","scrollTo","top","getElementById","offsetTop","behavior"],"version":3,"file":"index.8189bab3.js.map"}